name: Build & Test

on:
  push:
    branches:
      - main
      - 'feat/**'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Optional Tag'
        required: false

jobs:
  container-job:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: golang:1.17

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: oem
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v2
      - uses: bufbuild/buf-setup-action@v0.6.0
      - uses: bufbuild/buf-lint-action@v1
      - uses: golangci/golangci-lint-action@v2

      - name: Test
        run: make test
        env:
          OME_REDIS_STORE_ADDR: redis:6379
          OME_REDIS_PUBSUB_ADDR: redis:6379
          OME_PGDB_ADDR: postgres://postgres:secret@postgres:5432/oem