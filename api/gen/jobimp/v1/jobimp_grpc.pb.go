// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: jobimp/v1/jobimp.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobimpServiceClient is the client API for JobimpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobimpServiceClient interface {
	ImportJob(ctx context.Context, in *JobimpRequest, opts ...grpc.CallOption) (*JobimpResponse, error)
}

type jobimpServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobimpServiceClient(cc grpc.ClientConnInterface) JobimpServiceClient {
	return &jobimpServiceClient{cc}
}

func (c *jobimpServiceClient) ImportJob(ctx context.Context, in *JobimpRequest, opts ...grpc.CallOption) (*JobimpResponse, error) {
	out := new(JobimpResponse)
	err := c.cc.Invoke(ctx, "/api.jobimp.v1.JobimpService/ImportJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobimpServiceServer is the server API for JobimpService service.
// All implementations should embed UnimplementedJobimpServiceServer
// for forward compatibility
type JobimpServiceServer interface {
	ImportJob(context.Context, *JobimpRequest) (*JobimpResponse, error)
}

// UnimplementedJobimpServiceServer should be embedded to have forward compatible implementations.
type UnimplementedJobimpServiceServer struct {
}

func (UnimplementedJobimpServiceServer) ImportJob(context.Context, *JobimpRequest) (*JobimpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportJob not implemented")
}

// UnsafeJobimpServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobimpServiceServer will
// result in compilation errors.
type UnsafeJobimpServiceServer interface {
	mustEmbedUnimplementedJobimpServiceServer()
}

func RegisterJobimpServiceServer(s grpc.ServiceRegistrar, srv JobimpServiceServer) {
	s.RegisterService(&JobimpService_ServiceDesc, srv)
}

func _JobimpService_ImportJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobimpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobimpServiceServer).ImportJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.jobimp.v1.JobimpService/ImportJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobimpServiceServer).ImportJob(ctx, req.(*JobimpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobimpService_ServiceDesc is the grpc.ServiceDesc for JobimpService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobimpService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.jobimp.v1.JobimpService",
	HandlerType: (*JobimpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportJob",
			Handler:    _JobimpService_ImportJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jobimp/v1/jobimp.proto",
}
