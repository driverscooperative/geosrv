syntax = "proto3";

package api.job.v1beta1;

import "google/protobuf/timestamp.proto";
import "api/type/v1beta1/location.proto";

option go_package = "github.com/openmarketplaceengine/openmarketplaceengine/internal/api/job/v1beta1";

service JobService {
  rpc ImportJob(ImportJobRequest) returns (ImportJobResponse) {}
  rpc ExportJob(ExportJobRequest) returns (ExportJobResponse) {}
  rpc GetAvailableJobs(GetAvailableJobsRequest) returns (GetAvailableJobsResponse) {}
}

message JobInfo {
  string id = 1;
  string worker_id = 2;
  google.protobuf.Timestamp created = 3;
  google.protobuf.Timestamp updated = 4;
  string state = 5;
  google.protobuf.Timestamp pickup_date = 6;
  string pickup_addr = 7;
  api.type.v1beta1.Location pickup_loc = 8;
  string dropoff_addr = 9;
  api.type.v1beta1.Location dropoff_loc = 10;
  string trip_type = 11;
  string category = 12;
}

message ImportJobRequest {
  JobInfo job = 1;
}

enum JobAction {
  JOB_ACTION_UNSPECIFIED = 0;
  JOB_ACTION_CREATED = 1;
  JOB_ACTION_UPDATED = 2;
}

message ImportJobResponse {
  JobAction action = 1;
}


message ExportJobRequest {
  repeated string ids = 1;
}

message ExportJobItem {
  string id = 1;
  JobInfo job = 2;
}

message ExportJobResponse {
  repeated ExportJobItem jobs = 1;
}


message GetAvailableJobsRequest {
  // Any non-empty string representing geographic region
  // i.e. san-fran, new-york, alaska, us, global, test, etc.
  // Should be used consistently across all APIs.
  string area_key = 1;
  string worker_id = 2;
  int32 max_distance_meters = 3;
  // Result set limit.
  int32 limit = 4;
}

message AvailableJob {
  JobInfo job = 1;
  int32 distance_meters = 2;
}

message GetAvailableJobsResponse {
  repeated AvailableJob jobs = 1;
}