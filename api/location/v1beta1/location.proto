syntax = "proto3";

package api.location.v1beta1;

import "api/location/v1beta1/location_update.proto";
import "api/type/v1beta1/crossing.proto";
import "api/type/v1beta1/location.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/openmarketplaceengine/openmarketplaceengine/internal/api/location/v1beta1";

service LocationService {
  rpc UpdateLocation(UpdateLocationRequest) returns (UpdateLocationResponse) {}
  rpc GetLocation(GetLocationRequest) returns (GetLocationResponse) {}
}

message UpdateLocationRequest {
  string area_key = 1 [(validate.rules).string = {
    min_len: 3,
    ignore_empty: true,
  }];
  api.location.v1beta1.LocationUpdate value = 2;
  bool validate_only = 3;
}

message UpdateLocationResponse {
  string area_key = 1;
  string worker_id = 2;
  api.type.v1beta1.Crossing crossing = 3;
  google.protobuf.Timestamp update_time = 4;
}

message GetLocationRequest {
  string area_key = 1;
  string worker_id = 2;
}

message GetLocationResponse {
  string area_key = 1;
  string worker_id = 2;
  api.type.v1beta1.Location location = 3;
  google.protobuf.Timestamp last_seen_time = 4;
}
