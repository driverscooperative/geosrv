syntax = "proto3";

package api.eta.v1beta1;

import "google/protobuf/duration.proto";
import "validate/validate.proto";

option go_package = "github.com/driverscooperative/geosrv/internal/idl/api/eta/v1beta1";

service EstimatedJobService {
  rpc GetEstimatedJobs(GetEstimatedJobsRequest) returns (GetEstimatedJobsResponse) {}
}

enum Type {
  TYPE_UNSPECIFIED = 0;
  TYPE_DRIVER_TO_PICK_UP = 1;
  TYPE_PICK_UP_TO_DROP_OFF = 2;
}

message GetEstimatedJobsRequest {
  // Any non-empty string representing geographic region
  // i.e. san-fran, new-york, alaska, us, global, test, etc.
  // Should be used consistently across all APIs.
  string area_key = 1 [(validate.rules).string.min_len = 1];
  string worker_id = 2 [(validate.rules).string.uuid = true];
  // Radius in meters to look for jobs relative to current worker position.
  int32 radius_meters = 3 [(validate.rules).int32.gt = 0];
  // Result set limit.
  int32 limit = 4 [(validate.rules).int32.lte = 25];
  Type eta = 5 [(validate.rules).enum.defined_only = true];
}

message Location {
  double lat = 1;
  double lng = 2;
  string address = 3;
}

message Estimate {
  int32 distance_meters = 1;
  google.protobuf.Duration duration = 2;
}

message EstimatedJob {
  string id = 1;
  Estimate worker_to_pickup_estimate = 2;
  Estimate pickup_to_drop_off_estimate = 3;
  Location worker_location = 4;
  Location pickup_location = 5;
  Location drop_off_location = 6;
}

message GetEstimatedJobsResponse {
  repeated EstimatedJob jobs = 1;
}
