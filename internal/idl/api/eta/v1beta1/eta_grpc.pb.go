// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: api/eta/v1beta1/eta.proto

package v1beta1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EstimatedJobServiceClient is the client API for EstimatedJobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EstimatedJobServiceClient interface {
	GetEstimatedJobs(ctx context.Context, in *GetEstimatedJobsRequest, opts ...grpc.CallOption) (*GetEstimatedJobsResponse, error)
}

type estimatedJobServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEstimatedJobServiceClient(cc grpc.ClientConnInterface) EstimatedJobServiceClient {
	return &estimatedJobServiceClient{cc}
}

func (c *estimatedJobServiceClient) GetEstimatedJobs(ctx context.Context, in *GetEstimatedJobsRequest, opts ...grpc.CallOption) (*GetEstimatedJobsResponse, error) {
	out := new(GetEstimatedJobsResponse)
	err := c.cc.Invoke(ctx, "/api.eta.v1beta1.EstimatedJobService/GetEstimatedJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EstimatedJobServiceServer is the server API for EstimatedJobService service.
// All implementations should embed UnimplementedEstimatedJobServiceServer
// for forward compatibility
type EstimatedJobServiceServer interface {
	GetEstimatedJobs(context.Context, *GetEstimatedJobsRequest) (*GetEstimatedJobsResponse, error)
}

// UnimplementedEstimatedJobServiceServer should be embedded to have forward compatible implementations.
type UnimplementedEstimatedJobServiceServer struct {
}

func (UnimplementedEstimatedJobServiceServer) GetEstimatedJobs(context.Context, *GetEstimatedJobsRequest) (*GetEstimatedJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstimatedJobs not implemented")
}

// UnsafeEstimatedJobServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EstimatedJobServiceServer will
// result in compilation errors.
type UnsafeEstimatedJobServiceServer interface {
	mustEmbedUnimplementedEstimatedJobServiceServer()
}

func RegisterEstimatedJobServiceServer(s grpc.ServiceRegistrar, srv EstimatedJobServiceServer) {
	s.RegisterService(&EstimatedJobService_ServiceDesc, srv)
}

func _EstimatedJobService_GetEstimatedJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEstimatedJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstimatedJobServiceServer).GetEstimatedJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.eta.v1beta1.EstimatedJobService/GetEstimatedJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstimatedJobServiceServer).GetEstimatedJobs(ctx, req.(*GetEstimatedJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EstimatedJobService_ServiceDesc is the grpc.ServiceDesc for EstimatedJobService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EstimatedJobService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.eta.v1beta1.EstimatedJobService",
	HandlerType: (*EstimatedJobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEstimatedJobs",
			Handler:    _EstimatedJobService_GetEstimatedJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/eta/v1beta1/eta.proto",
}
