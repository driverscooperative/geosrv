// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: omeapi/location/v1beta1/detect.proto

package v1beta1

import (
	v1beta1 "github.com/openmarketplaceengine/openmarketplaceengine/internal/omeapi/type/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DetectTollgateCrossingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values       []*LocationUpdate `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	ValidateOnly bool              `protobuf:"varint,2,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
}

func (x *DetectTollgateCrossingsRequest) Reset() {
	*x = DetectTollgateCrossingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omeapi_location_v1beta1_detect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectTollgateCrossingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectTollgateCrossingsRequest) ProtoMessage() {}

func (x *DetectTollgateCrossingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_omeapi_location_v1beta1_detect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectTollgateCrossingsRequest.ProtoReflect.Descriptor instead.
func (*DetectTollgateCrossingsRequest) Descriptor() ([]byte, []int) {
	return file_omeapi_location_v1beta1_detect_proto_rawDescGZIP(), []int{0}
}

func (x *DetectTollgateCrossingsRequest) GetValues() []*LocationUpdate {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *DetectTollgateCrossingsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

type DetectTollgateCrossingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*v1beta1.TollgateCrossing `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *DetectTollgateCrossingsResponse) Reset() {
	*x = DetectTollgateCrossingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omeapi_location_v1beta1_detect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectTollgateCrossingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectTollgateCrossingsResponse) ProtoMessage() {}

func (x *DetectTollgateCrossingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_omeapi_location_v1beta1_detect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectTollgateCrossingsResponse.ProtoReflect.Descriptor instead.
func (*DetectTollgateCrossingsResponse) Descriptor() ([]byte, []int) {
	return file_omeapi_location_v1beta1_detect_proto_rawDescGZIP(), []int{1}
}

func (x *DetectTollgateCrossingsResponse) GetValues() []*v1beta1.TollgateCrossing {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_omeapi_location_v1beta1_detect_proto protoreflect.FileDescriptor

var file_omeapi_location_v1beta1_detect_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x6f, 0x6c, 0x6c, 0x67, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2d, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x86, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x60, 0x0a, 0x1f, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f,
	0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0xa0, 0x01, 0x0a, 0x0d,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01,
	0x0a, 0x17, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x2e, 0x6f, 0x6d, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x54, 0x6f, 0x6c, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x59,
	0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x6f, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_omeapi_location_v1beta1_detect_proto_rawDescOnce sync.Once
	file_omeapi_location_v1beta1_detect_proto_rawDescData = file_omeapi_location_v1beta1_detect_proto_rawDesc
)

func file_omeapi_location_v1beta1_detect_proto_rawDescGZIP() []byte {
	file_omeapi_location_v1beta1_detect_proto_rawDescOnce.Do(func() {
		file_omeapi_location_v1beta1_detect_proto_rawDescData = protoimpl.X.CompressGZIP(file_omeapi_location_v1beta1_detect_proto_rawDescData)
	})
	return file_omeapi_location_v1beta1_detect_proto_rawDescData
}

var file_omeapi_location_v1beta1_detect_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_omeapi_location_v1beta1_detect_proto_goTypes = []interface{}{
	(*DetectTollgateCrossingsRequest)(nil),  // 0: omeapi.location.v1beta1.DetectTollgateCrossingsRequest
	(*DetectTollgateCrossingsResponse)(nil), // 1: omeapi.location.v1beta1.DetectTollgateCrossingsResponse
	(*LocationUpdate)(nil),                  // 2: omeapi.location.v1beta1.LocationUpdate
	(*v1beta1.TollgateCrossing)(nil),        // 3: omeapi.type.v1beta1.TollgateCrossing
}
var file_omeapi_location_v1beta1_detect_proto_depIdxs = []int32{
	2, // 0: omeapi.location.v1beta1.DetectTollgateCrossingsRequest.values:type_name -> omeapi.location.v1beta1.LocationUpdate
	3, // 1: omeapi.location.v1beta1.DetectTollgateCrossingsResponse.values:type_name -> omeapi.type.v1beta1.TollgateCrossing
	0, // 2: omeapi.location.v1beta1.DetectService.DetectTollgateCrossings:input_type -> omeapi.location.v1beta1.DetectTollgateCrossingsRequest
	1, // 3: omeapi.location.v1beta1.DetectService.DetectTollgateCrossings:output_type -> omeapi.location.v1beta1.DetectTollgateCrossingsResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_omeapi_location_v1beta1_detect_proto_init() }
func file_omeapi_location_v1beta1_detect_proto_init() {
	if File_omeapi_location_v1beta1_detect_proto != nil {
		return
	}
	file_omeapi_location_v1beta1_location_update_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_omeapi_location_v1beta1_detect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectTollgateCrossingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omeapi_location_v1beta1_detect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectTollgateCrossingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omeapi_location_v1beta1_detect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_omeapi_location_v1beta1_detect_proto_goTypes,
		DependencyIndexes: file_omeapi_location_v1beta1_detect_proto_depIdxs,
		MessageInfos:      file_omeapi_location_v1beta1_detect_proto_msgTypes,
	}.Build()
	File_omeapi_location_v1beta1_detect_proto = out.File
	file_omeapi_location_v1beta1_detect_proto_rawDesc = nil
	file_omeapi_location_v1beta1_detect_proto_goTypes = nil
	file_omeapi_location_v1beta1_detect_proto_depIdxs = nil
}
