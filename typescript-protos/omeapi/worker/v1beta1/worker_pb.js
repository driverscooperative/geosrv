// source: omeapi/worker/v1beta1/worker.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.omeapi.worker.v1beta1.GetWorkerRequest', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.GetWorkerResponse', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.QueryByStateRequest', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.QueryByStateResponse', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.SetStateRequest', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.SetStateResponse', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.Worker', null, global);
goog.exportSymbol('proto.omeapi.worker.v1beta1.WorkerState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.GetWorkerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.GetWorkerRequest.displayName = 'proto.omeapi.worker.v1beta1.GetWorkerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.GetWorkerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.GetWorkerResponse.displayName = 'proto.omeapi.worker.v1beta1.GetWorkerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.SetStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.SetStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.SetStateRequest.displayName = 'proto.omeapi.worker.v1beta1.SetStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.SetStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.SetStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.SetStateResponse.displayName = 'proto.omeapi.worker.v1beta1.SetStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.QueryByStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.QueryByStateRequest.displayName = 'proto.omeapi.worker.v1beta1.QueryByStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.Worker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.Worker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.Worker.displayName = 'proto.omeapi.worker.v1beta1.Worker';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.omeapi.worker.v1beta1.QueryByStateResponse.repeatedFields_, null);
};
goog.inherits(proto.omeapi.worker.v1beta1.QueryByStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.omeapi.worker.v1beta1.QueryByStateResponse.displayName = 'proto.omeapi.worker.v1beta1.QueryByStateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.GetWorkerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerRequest}
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.GetWorkerRequest;
  return proto.omeapi.worker.v1beta1.GetWorkerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerRequest}
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.GetWorkerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string worker_id = 1;
 * @return {string}
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.prototype.getWorkerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerRequest} returns this
 */
proto.omeapi.worker.v1beta1.GetWorkerRequest.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.GetWorkerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    worker: (f = msg.getWorker()) && proto.omeapi.worker.v1beta1.Worker.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerResponse}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.GetWorkerResponse;
  return proto.omeapi.worker.v1beta1.GetWorkerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerResponse}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.omeapi.worker.v1beta1.Worker;
      reader.readMessage(value,proto.omeapi.worker.v1beta1.Worker.deserializeBinaryFromReader);
      msg.setWorker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.GetWorkerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.GetWorkerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorker();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.omeapi.worker.v1beta1.Worker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Worker worker = 1;
 * @return {?proto.omeapi.worker.v1beta1.Worker}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.getWorker = function() {
  return /** @type{?proto.omeapi.worker.v1beta1.Worker} */ (
    jspb.Message.getWrapperField(this, proto.omeapi.worker.v1beta1.Worker, 1));
};


/**
 * @param {?proto.omeapi.worker.v1beta1.Worker|undefined} value
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerResponse} returns this
*/
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.setWorker = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.omeapi.worker.v1beta1.GetWorkerResponse} returns this
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.clearWorker = function() {
  return this.setWorker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.omeapi.worker.v1beta1.GetWorkerResponse.prototype.hasWorker = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.SetStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.SetStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.SetStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.SetStateRequest}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.SetStateRequest;
  return proto.omeapi.worker.v1beta1.SetStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.SetStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.SetStateRequest}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkerId(value);
      break;
    case 2:
      var value = /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.SetStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.SetStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.SetStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string worker_id = 1;
 * @return {string}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.getWorkerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.omeapi.worker.v1beta1.SetStateRequest} returns this
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional WorkerState state = 2;
 * @return {!proto.omeapi.worker.v1beta1.WorkerState}
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.getState = function() {
  return /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.omeapi.worker.v1beta1.WorkerState} value
 * @return {!proto.omeapi.worker.v1beta1.SetStateRequest} returns this
 */
proto.omeapi.worker.v1beta1.SetStateRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.SetStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.SetStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.SetStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    worker: (f = msg.getWorker()) && proto.omeapi.worker.v1beta1.Worker.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.SetStateResponse}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.SetStateResponse;
  return proto.omeapi.worker.v1beta1.SetStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.SetStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.SetStateResponse}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.omeapi.worker.v1beta1.Worker;
      reader.readMessage(value,proto.omeapi.worker.v1beta1.Worker.deserializeBinaryFromReader);
      msg.setWorker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.SetStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.SetStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.SetStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorker();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.omeapi.worker.v1beta1.Worker.serializeBinaryToWriter
    );
  }
};


/**
 * optional Worker worker = 1;
 * @return {?proto.omeapi.worker.v1beta1.Worker}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.getWorker = function() {
  return /** @type{?proto.omeapi.worker.v1beta1.Worker} */ (
    jspb.Message.getWrapperField(this, proto.omeapi.worker.v1beta1.Worker, 1));
};


/**
 * @param {?proto.omeapi.worker.v1beta1.Worker|undefined} value
 * @return {!proto.omeapi.worker.v1beta1.SetStateResponse} returns this
*/
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.setWorker = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.omeapi.worker.v1beta1.SetStateResponse} returns this
 */
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.clearWorker = function() {
  return this.setWorker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.omeapi.worker.v1beta1.SetStateResponse.prototype.hasWorker = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.QueryByStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateRequest}
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.QueryByStateRequest;
  return proto.omeapi.worker.v1beta1.QueryByStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateRequest}
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.QueryByStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional WorkerState state = 1;
 * @return {!proto.omeapi.worker.v1beta1.WorkerState}
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.prototype.getState = function() {
  return /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.omeapi.worker.v1beta1.WorkerState} value
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateRequest} returns this
 */
proto.omeapi.worker.v1beta1.QueryByStateRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.Worker.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.Worker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.Worker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.Worker.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.Worker}
 */
proto.omeapi.worker.v1beta1.Worker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.Worker;
  return proto.omeapi.worker.v1beta1.Worker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.Worker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.Worker}
 */
proto.omeapi.worker.v1beta1.Worker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkerId(value);
      break;
    case 2:
      var value = /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.Worker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.Worker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.Worker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.Worker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string worker_id = 1;
 * @return {string}
 */
proto.omeapi.worker.v1beta1.Worker.prototype.getWorkerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.omeapi.worker.v1beta1.Worker} returns this
 */
proto.omeapi.worker.v1beta1.Worker.prototype.setWorkerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional WorkerState state = 2;
 * @return {!proto.omeapi.worker.v1beta1.WorkerState}
 */
proto.omeapi.worker.v1beta1.Worker.prototype.getState = function() {
  return /** @type {!proto.omeapi.worker.v1beta1.WorkerState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.omeapi.worker.v1beta1.WorkerState} value
 * @return {!proto.omeapi.worker.v1beta1.Worker} returns this
 */
proto.omeapi.worker.v1beta1.Worker.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.omeapi.worker.v1beta1.QueryByStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    workersList: jspb.Message.toObjectList(msg.getWorkersList(),
    proto.omeapi.worker.v1beta1.Worker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateResponse}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.omeapi.worker.v1beta1.QueryByStateResponse;
  return proto.omeapi.worker.v1beta1.QueryByStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateResponse}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.omeapi.worker.v1beta1.Worker;
      reader.readMessage(value,proto.omeapi.worker.v1beta1.Worker.deserializeBinaryFromReader);
      msg.addWorkers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.omeapi.worker.v1beta1.QueryByStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.omeapi.worker.v1beta1.QueryByStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.omeapi.worker.v1beta1.Worker.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Worker workers = 1;
 * @return {!Array<!proto.omeapi.worker.v1beta1.Worker>}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.getWorkersList = function() {
  return /** @type{!Array<!proto.omeapi.worker.v1beta1.Worker>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.omeapi.worker.v1beta1.Worker, 1));
};


/**
 * @param {!Array<!proto.omeapi.worker.v1beta1.Worker>} value
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateResponse} returns this
*/
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.setWorkersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.omeapi.worker.v1beta1.Worker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.omeapi.worker.v1beta1.Worker}
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.addWorkers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.omeapi.worker.v1beta1.Worker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.omeapi.worker.v1beta1.QueryByStateResponse} returns this
 */
proto.omeapi.worker.v1beta1.QueryByStateResponse.prototype.clearWorkersList = function() {
  return this.setWorkersList([]);
};


/**
 * @enum {number}
 */
proto.omeapi.worker.v1beta1.WorkerState = {
  WORKER_STATE_UNSPECIFIED: 0,
  WORKER_STATE_ONLINE: 1,
  WORKER_STATE_OFFLINE: 2,
  WORKER_STATE_ON_JOB: 3
};

goog.object.extend(exports, proto.omeapi.worker.v1beta1);
